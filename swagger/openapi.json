{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Base api. documentation",
    "description": "A sample API using the OpenAPI 3.0 specification. Based over the example of pet store from swagger.io",
    "contact": {
      "name": "Pablo Gottifredi",
      "email": "pablo.gottifredi@gmail.com",
      "url": "linkedin.com/in/pablogottifredi"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    {
      "url": "http://base-api-node:8080/api"
    },
    {
      "url": "http://base-api-node/api"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "description": "Return a list of items",
        "operationId": "getItems",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "text criteria",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "page offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort fields",
            "required": false,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/item"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new item . Duplicates are allowed",
        "operationId": "addItem",
        "requestBody": {
          "description": "Item to add. The id will generated by the storage",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "description": "Returns a item based on a single ID. For test purposes, send -1 for 404 response",
        "operationId": "getItembyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "item response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                },
                "example": {
                  "id": 1,
                  "name": "my name"
                }
              }
            }
          },
          "404": {
            "description": "item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single item based on the ID supplied",
        "operationId": "deleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of item to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "item deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/newItem"
          },
          {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "newItem": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
